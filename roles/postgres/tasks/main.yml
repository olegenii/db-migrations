- name: Install required packages
  ansible.builtin.apt:
    name:
      - wget
      - python3-psycopg2
      - acl
    state: latest

- name: Set up Postgres 14 repo
  ansible.builtin.shell: |
    echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
  args:
    warn: no

- name: "Update apt cache and install {{ postgresql_version }}"
  ansible.builtin.apt:
    name: "{{ postgresql_version }}"
    state: present
    update_cache: true
  notify: Enable Postgresql

- name: Ensure PostgreSQL is listening on *
  ansible.builtin.lineinfile:
    dest: /etc/postgresql/14/main/postgresql.conf
    regexp: '^listen_addresses\s*='
    line: "listen_addresses='*'"
    state: present
  notify: Restart Postgresql

- name: Add new configuration to "pg_hba.conf"
  ansible.builtin.blockinfile:
    dest: /etc/postgresql/14/main/pg_hba.conf
    block: |
      host    all             all             0.0.0.0/0                md5
      host    all             all             ::/0                     md5
  notify: Restart Postgresql

- name: Change peer identification to trust
  shell: /bin/sed -i '/^local/s/peer/trust/' /etc/postgresql/14/main/pg_hba.conf
  args:
    warn: no
  notify: Restart Postgresql

- name: Create a Superuser PostgreSQL database user
  become: yes
  become_user: postgres
  postgresql_user:
    name: '{{ postgres_root_user }}'
    password: '{{ postgres_root_pass }}'
    role_attr_flags: CREATEDB,SUPERUSER,CREATEROLE
    encrypted: yes
    state: present

- name: Create a new database with name "api"
  become: yes
  become_user: postgres
  community.postgresql.postgresql_db:
    name: api